{"version":3,"file":"../js/index.js","names":["menuBtn","document","querySelector","navMenu","saleMain","URLmain","hrefSrc","window","location","href","split","slice","join","addEventListener","e","preventDefault","classList","toggle","cardsRender","data","listWrapper","createElement","add","forEach","item","index","li","oldPrice","price","discount","localStorage","setItem","JSON","stringify","title","Math","round","dataset","text","insertAdjacentHTML","image","appendChild","init","fetch","then","response","json","cards","append","catch","err","console","log"],"sources":["index.js"],"mappings":"AAAA,MAAMA,QAAUC,SAASC,cAAc,iBACjCC,QAAUF,SAASC,cAAc,gBACjCE,SAAWH,SAASC,cAAc,eAClCG,QAAU,kCACVC,QAAUC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,MAAM,GAAI,GAAGC,KAAK,KAIlEZ,QAAQa,iBAAiB,SAAUC,IAC/BA,EAAEC,iBACFf,QAAQgB,UAAUC,OAAO,wBACzBd,QAAQa,UAAUC,OAAO,sBAAqB,IAKlD,MAAMC,YAAeC,IACjB,GAAGA,EAAM,CACN,MAAMC,EAAenB,SAASoB,cAAc,MAiC3C,OAhCDD,EAAYJ,UAAUM,IAAI,aAAc,mBAEvCH,EAAKI,SAAQ,CAACC,EAAMC,KAClB,MAAMC,EAAMzB,SAASoB,cAAc,MACnCK,EAAGV,UAAUM,IAAI,aAAc,cAAcG,EAAM,KAEjD,IAAIE,EAAWR,EAAKM,GAAOG,MACvBC,EAAW,EAEfH,EAAGb,iBAAiB,SAAUC,IAC1BgB,aAAaC,QAAQ,sBAAuBC,KAAKC,UAAUT,EAAKU,QAChE3B,OAAOC,SAASC,KAAO,GAAGH,mBAAmB,IAG7Ca,EAAKM,GAAOI,WACZA,EAAWV,EAAKM,GAAOI,SACvBF,EAAWQ,KAAKC,MAAMT,EAAYA,EAAS,IAAIE,GAC/CH,EAAGV,UAAUM,IAAI,uBACjBI,EAAGW,QAAQC,KAAO,GAAGnB,EAAKM,GAAOI,aAGrCH,EAAGa,mBAAmB,aAAa,oEACkBf,EAAKgB,8KAEvBrB,EAAKM,GAAOG,gEACZD,oFAEAR,EAAKM,GAAOS,aAE/Cd,EAAYqB,YAAYf,EAAG,IAGxBN,CACX,GAGIsB,KAAO,KACPC,MAAMtC,SACLuC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMzB,GAASD,YAAYC,KAC3ByB,MAAMG,GAAU3C,SAASF,cAAc,cAAc8C,OAAOD,KAC5DE,OAAOC,IACJC,QAAQC,IAAIF,EAAG,GAClB,EANDP,MAAMtC,SACLuC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMzB,GAASD,YAAYC,KAC3ByB,MAAMG,GAAU3C,SAASF,cAAc,cAAc8C,OAAOD,KAC5DE,OAAOC,IACJC,QAAQC,IAAIF,EAAG","sourcesContent":["const menuBtn = document.querySelector('.header__menu');\r\nconst navMenu = document.querySelector('.navbar-menu');\r\nconst saleMain = document.querySelector('.sale__main');\r\nconst URLmain = 'http://localhost:3000/api/goods';\r\nconst hrefSrc = window.location.href.split('/').slice(0, -1).join('/');\r\n\r\n\r\n// Открытие меню по клику\r\nmenuBtn.addEventListener('click', (e) => {\r\n    e.preventDefault();\r\n    menuBtn.classList.toggle('header__menu--active');\r\n    navMenu.classList.toggle('navbar-menu--active')\r\n})\r\n\r\n\r\n// Функция рендера карточек\r\nconst cardsRender = (data) => {\r\n    if(data) {\r\n       const listWrapper  = document.createElement('ul');\r\n       listWrapper.classList.add('sale__list', 'sale__list-main');\r\n        \r\n        data.forEach((item, index) => {  \r\n          const li  = document.createElement('li');\r\n          li.classList.add('sale__item', `sale__item_${index+1}`);\r\n\r\n            let oldPrice = data[index].price;\r\n            let discount = 0;\r\n            // переход на страницу карточки по клику\r\n            li.addEventListener('click', (e) => {\r\n                localStorage.setItem('downloadableProduct', JSON.stringify(item.title));\r\n                window.location.href = `${hrefSrc}/card.html`;\r\n            })\r\n\r\n            if (data[index].discount) {\r\n                discount = data[index].discount;\r\n                oldPrice = Math.round(oldPrice + (oldPrice/100*discount));\r\n                li.classList.add('sale__item-discount');\r\n                li.dataset.text = `${data[index].discount}%`;\r\n              }   \r\n\r\n            li.insertAdjacentHTML('afterbegin',`\r\n                <img loading=\"lazy\" src= http://localhost:3000/${item.image} alt=\"Картинка скидок\" class=\"stock__img\" width=\"325\" height=\"295\">\r\n                <div class=\"sale__wrapper-prices\">\r\n                    <span class=\"price-sale\">${data[index].price} ₽</span>\r\n                    <span class=\"price-full\">${oldPrice} ₽</span>\r\n                </div>\r\n                <p class=\"sale__description\">${data[index].title}</p>`\r\n            );\r\n            listWrapper.appendChild(li);\r\n           \r\n        });\r\n        return listWrapper\r\n    }\r\n}\r\n// Загрузка данных карточек при загрузке\r\n  const init = () => {\r\n        fetch(URLmain)\r\n        .then((response) => response.json())\r\n        .then((data) => cardsRender(data))\r\n        .then((cards) => saleMain.querySelector('.container').append(cards))\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n  }\r\n init()\r\n\r\n\r\n"]}