{"version":3,"file":"../js/card.js","names":["cardSection","document","querySelector","cardDescription","recommendationsSection","URLmain","hrefSrc","window","location","href","split","slice","join","cardRender","data","title","createElement","classList","add","innerText","cardWrapper","oldPrice","price","discount","Math","round","insertAdjacentHTML","image","dataset","text","addEventListener","e","basketStorage","JSON","parse","localStorage","getItem","titleProduct","newpriceProduct","oldriceProduct","imageProduct","countProduct","newArr","length","map","item","index","splice","findIndex","field","card","setItem","stringify","cardText","description","cartFull","init","downloadableProduct","removeItem","fetch","then","response","json","filter","full","prepend","append","catch","err","console","log","cardsRenderRecom","listWrapper","forEach","li","appendChild","initRecommendation","items","cards"],"sources":["card.js"],"mappings":"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","sourcesContent":["const cardSection = document.querySelector('.card');\r\nconst cardDescription = document.querySelector('.card__description');\r\nconst recommendationsSection = document.querySelector('.recommendations');\r\nconst URLmain = 'http://localhost:3000/api/goods';\r\nconst hrefSrc = window.location.href.split('/').slice(0, -1).join('/');\r\n\r\n// Функция рендера карточки\r\nconst cardRender = (data) => {\r\n    //    заголовок карточки\r\n        const title  = document.createElement('h2');\r\n        title.classList.add('card__name');\r\n        title.innerText = data.title;\r\n    \r\n    // информация карточки\r\n       const cardWrapper  = document.createElement('div');\r\n       cardWrapper.classList.add('card__wrapper');\r\n\r\n       let oldPrice = data.price;\r\n       let discount = 0;\r\n       if (data.discount) {\r\n           discount = data.discount;\r\n           oldPrice = Math.round(oldPrice + (oldPrice/100*discount));\r\n         } \r\n\r\n       cardWrapper.insertAdjacentHTML('afterbegin',\r\n                `<div class=\"card__img\">\r\n                     <img loading=\"lazy\" src= http://localhost:3000/${data.image} alt=\"Картинка товара\" width=\"540\" height=\"303\">   \r\n                </div>\r\n                <div class=\"card__basket-wrapper\">\r\n                    <div class=\"card__prices\">\r\n                        <span class=\"new-price\">${data.price} ₽</span>\r\n                        <span class=\"old-price\">${oldPrice} ₽</span>\r\n                    </div>\r\n                    <a href=\"#\" class=\"card__credit-link\">В кредит от 5600 ₽</a>\r\n                    <div class=\"card__buttons-wrapper\">\r\n                        <button class=\"card__btn-basket\">Добавить в корзину</button>\r\n                        <button class=\"card__btn-favourites\"><img src=\"img/icon-favourites.svg\" alt=\"\"></button>   \r\n                    </div>\r\n                    <div class=\"card__info-wrapper\">\r\n                        <div class=\"card__info-item\">\r\n                            <span>Доставка</span>\r\n                            <span class=\"card__info-date\">1-3 января</span>\r\n                        </div> \r\n                        <div class=\"card__info-item\">\r\n                            <span>Продавец</span>\r\n                            <span class=\"card__info-seller\">ShopOnline</span>\r\n                        </div> \r\n                    </div>\r\n                    <a href=\"#\" class=\"card__bell-link\"><img src=\"img/icon-bell.svg\" alt=\"\">Узнать о снижении цены</a>\r\n                </div>`\r\n                )\r\n                if (data.discount) {\r\n                    cardWrapper.querySelector('.card__img').classList.add('card__img-discount');\r\n                    cardWrapper.querySelector('.card__img').dataset.text = `${data.discount}%`;\r\n                  } \r\n                  \r\n                // функция добавления товара в корзину по клику\r\n                const btnBasket = cardWrapper.querySelector('.card__btn-basket');\r\n\r\n                btnBasket.addEventListener('click', (e) => {\r\n                    let basketStorage = JSON.parse(localStorage.getItem('basket')) || [];\r\n\r\n                    const titleProduct = data.title;\r\n                    const newpriceProduct = data.price;\r\n                    const oldriceProduct = oldPrice;\r\n                    const imageProduct = data.image;\r\n                    let countProduct = 1;\r\n                    const newArr = [...basketStorage];\r\n\r\n                    if (basketStorage.length && basketStorage !== []) {\r\n                        basketStorage.map((item, index) => {\r\n                            if (item.titleProduct == titleProduct) {\r\n                                countProduct = item.countProduct;\r\n                                newArr.splice(newArr.findIndex(item => item.field === \"titleProduct\"), 1);\r\n                                countProduct++;\r\n                            }\r\n                        })\r\n                    };\r\n                    const card = {titleProduct, imageProduct, newpriceProduct, oldriceProduct, countProduct};\r\n                    localStorage.setItem('basket', JSON.stringify([...newArr, card]))\r\n                });\r\n                \r\n \r\n        // описание карточки\r\n        const cardText  = document.createElement('p');\r\n        cardText.classList.add('card__description-text');\r\n        cardText.innerText = data.description;\r\n        \r\n        cartFull = {title, cardWrapper, cardText};\r\n        return cartFull\r\n    }\r\n\r\n\r\n// Загрузка данных карточки при загрузке\r\nconst init = () => {\r\n    const downloadableProduct = JSON.parse(localStorage.getItem('downloadableProduct'));\r\n    localStorage.removeItem('downloadableProduct');\r\n\r\n    fetch(URLmain)\r\n    .then((response) => response.json())\r\n    .then((data) => data.filter(item => item.title == downloadableProduct))\r\n    .then((item) => cardRender(item[0]))\r\n    .then((full) => \r\n     cardSection.prepend(full.title, full.cardWrapper) &\r\n     cardDescription.append(full.cardText)\r\n    )\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\ninit()\r\n\r\n\r\n\r\n// Функция рендера карточек для секции Рекомендуемые\r\nconst cardsRenderRecom = (data) => {\r\n    if(data) {\r\n       const listWrapper  = document.createElement('ul');\r\n       listWrapper.classList.add('sale__list');\r\n        \r\n        data.forEach((item, index) => {  \r\n          const li  = document.createElement('li');\r\n          li.classList.add('sale__item', `sale__item_${index+1}`);\r\n          // переход на страницу карточки по клику\r\n          li.addEventListener('click', (e) => {\r\n            localStorage.setItem('downloadableProduct', JSON.stringify(item.title));\r\n            window.location.href = `${hrefSrc}/card.html`;\r\n          })\r\n\r\n            let oldPrice = data[index].price;\r\n            let discount = 0;\r\n            if (data[index].discount) {\r\n                discount = data[index].discount;\r\n                oldPrice = Math.round(oldPrice + (oldPrice/100*discount));\r\n                li.classList.add('sale__item-discount');\r\n                li.dataset.text = `${data[index].discount}%`;\r\n              }   \r\n\r\n            li.insertAdjacentHTML('afterbegin',`\r\n                <img loading=\"lazy\" src= http://localhost:3000/${item.image} alt=\"Картинка скидок\" class=\"stock__img\" width=\"325\" height=\"295\">\r\n                <div class=\"sale__wrapper-prices\">\r\n                    <span class=\"price-sale\">${data[index].price} ₽</span>\r\n                    <span class=\"price-full\">${oldPrice} ₽</span>\r\n                </div>\r\n                <p class=\"sale__description\">${data[index].title}</p>`\r\n            );\r\n            listWrapper.appendChild(li);\r\n           \r\n        });\r\n        return listWrapper\r\n    }\r\n}\r\n\r\n// Загрузка блока рекомендаций при загрузке\r\nconst initRecommendation = () => {\r\n    fetch(URLmain)\r\n    .then((response) => response.json())\r\n    .then((data) => data.slice(0, 8))\r\n    .then((items) => cardsRenderRecom(items))\r\n    .then((cards) => recommendationsSection.append(cards))\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\ninitRecommendation()\r\n\r\n\r\n\r\n"]}